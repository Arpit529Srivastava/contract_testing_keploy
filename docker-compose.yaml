version: '3.8'

services:
  user-service:
    build:
      context: ./VirtualCPR/user-services
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    container_name: user_services
    restart: always
    environment:
      DB_USER: "postgres"
      DB_PASSWORD: "Rupam#rani1983"
      DB_NAME: "user_services"
      DB_HOST: "postgres"
      DB_PORT: "5432"
    volumes:
      - user-data:/app/data
    networks:
      - keploy-network # ✅ Fixed incorrect network format

  order-service:
    build:
      context: ./VirtualCPR/order-services
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    container_name: order_services
    restart: always
    volumes:
      - order-data:/app/data
    networks:
      - keploy-network

  payment-service:
    build:
      context: ./VirtualCPR/payment-services
      dockerfile: Dockerfile
    container_name: payment_services
    ports:
      - "8082:8082"
    networks:
      - keploy-network

  notification-service:
    build:
      context: ./VirtualCPR/notification_services
      dockerfile: Dockerfile
    container_name: notification_services
    ports:
      - "8084:8084"
    networks:
      - keploy-network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Rupam#rani1983"
      POSTGRES_DB: "user_services"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - keploy-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d user_services" ]
      interval: 5s
      timeout: 3s
      retries: 3

  mongo:
    image: "mongo"
    container_name: mongoDB
    ports:
      - "27017:27017"
    networks:
      - keploy-network
    volumes:
      - mongo-data:/data/db # Ensure MongoDB data is stored properly

volumes:
  user-data:
  order-data:
  mongo-data:
  postgres-data:  # ✅ Added the missing postgres-data volume

networks:
  keploy-network:
    external: true
